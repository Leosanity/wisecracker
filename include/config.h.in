/*
    Wisecracker: A cryptanalysis framework
    Copyright (c) 2011-2012, Vikas Naresh Kumar, Selective Intellect LLC
       
   	This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    any later version.
   
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
   
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
 * Copyright: 2011-2012. Selective Intellect LLC. All Rights Reserved.
 * Author: Vikas Kumar
 * Date: 21st Dec 2011
 * Software: WiseCracker
 */
#ifndef __WC_CONFIG_H__
#define __WC_CONFIG_H__

#ifdef __cplusplus
    #define EXTERN_C_BEGIN extern "C" {
    #define EXTERN_C_END   }
#else // __cplusplus
    #define EXTERN_C_BEGIN
    #define EXTERN_C_END
#endif // __cplusplus

#ifdef WIN32
    #if _MSC_VER >= 1300
        #ifndef WCDLL
			// define this if linking with static lib
			#ifdef WC_LINKING_STATIC
				#define WCDLL
			#else
				// if linking with DLL
				#ifdef WC_COMPILING_DLL
		            #define WCDLL __declspec(dllexport)
				#else
					#define WCDLL __declspec(dllimport)
				#endif
			#endif
        #endif
            // Microsoft uses __FUNCTION__ instead of __func__
            #ifndef __func__
                #define __func__ __FUNCTION__
            #endif
	#endif
	#define _CRT_SECURE_NO_WARNINGS
#else // not WIN32
    #ifndef APIENTRY
        #define APIENTRY
    #endif
    #ifndef WCDLL
        #define WCDLL
    #endif
	#ifndef CALLBACK
		#define CALLBACK
	#endif
	#define _GNU_SOURCE
#endif

EXTERN_C_BEGIN

#cmakedefine WC_WINDOWS_H
#ifdef WC_WINDOWS_H
// Windows XP support level is desired
#define _WIN32_WINNT 0x502
#include <windows.h>
#endif

#cmakedefine WC_ERRNO_H
#ifdef WC_ERRNO_H
#include <errno.h>
#endif

#cmakedefine WC_CTYPE_H
#ifdef WC_CTYPE_H
#include <ctype.h>
#endif

#cmakedefine WC_SYSTYPES_H
#ifdef WC_SYSTYPES_H
#include <sys/types.h>
#endif

#cmakedefine WC_STDIO_H
#ifdef WC_STDIO_H
#include <stdio.h>
#endif

#cmakedefine WC_STDLIB_H
#ifdef WC_STDLIB_H
#include <stdlib.h>
#endif

#cmakedefine WC_STRING_H
#ifdef WC_STRING_H
#include <string.h>
#endif

#cmakedefine WC_MALLOC_H
#ifdef WC_MALLOC_H
#include <malloc.h>
#endif

#cmakedefine WC_TIME_H
#ifdef WC_TIME_H
#include <time.h>
#endif

#cmakedefine WC_UNISTD_H
#ifdef WC_UNISTD_H
#include <unistd.h>
#endif

#cmakedefine WC_SYSTIME_H
#ifdef WC_SYSTIME_H
#include <sys/time.h>
#endif

#cmakedefine WC_SYSTIMEB_H
#ifdef WC_SYSTIMEB_H
#include <sys/timeb.h>
#endif

#cmakedefine WC_STDINT_H
#ifdef WC_STDINT_H
#include <stdint.h>
#else
	#ifdef WIN32
		#define uint32_t UINT32
		#define ssize_t SSIZE_T
		#define uint64_t UINT64
		#define int64_t INT64
		#define uint8_t unsigned char
		#define int8_t char
	#endif
#endif

#cmakedefine WC_STDARG_H
#ifdef WC_STDARG_H
#include <stdarg.h>
#endif

#cmakedefine WC_OPENCL_H
#ifdef WC_OPENCL_H
	#if (defined __APPLE__) || (defined MACOSX)
		#include <OpenCL/opencl.h>
	#else
		#include <CL/opencl.h>
	#endif
#endif

#cmakedefine WC_ASSERT_H
#ifdef WC_ASSERT_H
	#include <assert.h>
#endif

#cmakedefine WC_SYSSTAT_H
#ifdef WC_SYSSTAT_H
	#include <sys/stat.h>
#endif

// for command line options
#cmakedefine WC_GETOPT_H

// for MD5 verification only
#cmakedefine WC_OPENSSL_MD5_H

// for Windows functions
#cmakedefine WC_SHLWAPI_H
#ifdef WC_SHLWAPI_H
	#include <shlwapi.h>
#endif

#cmakedefine WC_LIBGEN_H
#ifdef WC_LIBGEN_H
	#include <libgen.h>
#endif

EXTERN_C_END
#endif // __WC_CONFIG_H__

